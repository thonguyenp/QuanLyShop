@model IPagedList<QuanLyShop.Models.EF.News>
@using X.PagedList
@using X.PagedList.Mvc.Core
@{
    ViewData["Title"] = "Index";
    Layout = "~/Areas/Admin/Views/Shared/_Layout.cshtml";
}

<h1>Index</h1>

<p>
    <a asp-action="Create">
        <button type="submit" class="btn btn-primary">Create New</button>
    </a>
</p>

<form method="get" action="">
    <div class="input-group mb-3">
        <input type="text" name="txtSearch" class="form-control" placeholder="Nhập Thông Tin" value="@ViewBag.txtSearch" />
        <button class="btn btn-outline-primary" type="submit">Tìm kiếm</button>
    </div>
</form>

<table class="table" bgcolor="white">
    <thead>
        <tr>
            <th>
                Title
            </th>
            @* <th>
            Alias)
            </th> *@
            <th>
                Description
            </th>
            @* <th>
            Detail)
            </th> *@
            <th>
                Image
            </th>
            @*<th>
            SeoTitle)
            </th>
            <th>
            SeoDescription)
            </th>
            <th>
            SeoKeywords)
            </th> *@
            <th>
                IsActive
            </th>
            @* <th>
            Category)
            </th>
            <th>
            CreatedBy)
            </th>
            <th>
            CreatedDate)
            </th>
            <th>
            ModifiedDate)
            </th>
            <th>
            Modifiedby)
            </th> *@
            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model)
        {
            <tr>
                <td style="max-width: 300px; overflow: hidden; text-overflow: ellipsis; white-space: nowrap;">
                    @Html.DisplayFor(modelItem => item.Title)
                </td>
                @* <td>
            @Html.DisplayFor(modelItem => item.Alias)
            </td> *@
                <td style="max-width: 300px; overflow: hidden; text-overflow: ellipsis; white-space: nowrap;">
                    @Html.DisplayFor(modelItem => item.Description)
                </td>
                @* <td>
            @Html.DisplayFor(modelItem => item.Detail)
            </td> *@
                <td>
                    <img src="@item.Image" width="50" />
                </td>
                @*<td>
            @Html.DisplayFor(modelItem => item.SeoTitle)
            </td>
            <td>
            @Html.DisplayFor(modelItem => item.SeoDescription)
            </td>
            <td>
            @Html.DisplayFor(modelItem => item.SeoKeywords)
            </td> *@
                <td>
                    @Html.DisplayFor(modelItem => item.IsActive)
                </td>
                @* <td>
            @Html.DisplayFor(modelItem => item.Category.Title)
            </td>
            <td>
            @Html.DisplayFor(modelItem => item.CreatedBy)
            </td>
            <td>
            @Html.DisplayFor(modelItem => item.CreatedDate)
            </td>
            <td>
            @Html.DisplayFor(modelItem => item.ModifiedDate)
            </td>
            <td>
            @Html.DisplayFor(modelItem => item.Modifiedby)
            </td> *@
                <td>
                    <a asp-action="Edit" asp-route-id="@item.Id">
                        <button type="submit" class="btn btn-primary">Edit</button>
                    </a>
                    <a asp-action="Details" asp-route-id="@item.Id">
                        <button type="submit" class="btn btn-success">Details</button>
                    </a>
                    <a asp-action="Delete" asp-route-id="@item.Id">
                        <button type="submit" class="btn btn-danger">Delete</button>
                    </a>
                </td>
            </tr>
        }
    </tbody>
</table>

<div>
    @Html.PagedListPager(Model, page => Url.Action("Index", new { page, pageSize = ViewBag.pageSize, txtSearch = ViewBag.txtSearch }),
            new PagedListRenderOptions
    {
        DisplayLinkToPreviousPage = PagedListDisplayMode.Always,
        DisplayLinkToNextPage = PagedListDisplayMode.Always,
        DisplayLinkToFirstPage = PagedListDisplayMode.Never,
        DisplayLinkToLastPage = PagedListDisplayMode.Never,
        LinkToPreviousPageFormat = "«",
        LinkToNextPageFormat = "»",
        ContainerDivClasses = new[] { "pagination" },
    }
            )
</div>
